<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/resources/**" security="none"/>
    <http pattern="/webjars/**" security="none"/>

    <http pattern="/rest/authentication/login" security="none"/>

    <http pattern="/rest/**" use-expressions="true" name="restSecurityFilterChain" entry-point-ref="entryPointUnauthorizedHandler" create-session="stateless">
        <intercept-url pattern="/rest/**" method="OPTIONS" access="permitAll"/>
        <intercept-url pattern="/rest/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="isAuthenticated()" requires-channel="https"/>
        <custom-filter before="FORM_LOGIN_FILTER" ref="authenticationTokenFilter"/>
        <csrf disabled="true"/>
    </http>

    <http>
        <intercept-url pattern="/login" access="permitAll"/>
        <intercept-url pattern="/register" access="permitAll"/>

        <intercept-url pattern="/**/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="isAuthenticated()" requires-channel="https"/>
        <form-login login-page="/login" default-target-url="/meals"
                    authentication-failure-url="/login?error=true"
                    login-processing-url="/spring_security_check"/>
        <logout logout-success-url="/login"/>
    </http>


    <beans:bean class="ru.javawebinar.topjava.util.PasswordUtil" id="passwordEncoder" factory-method="getPasswordEncoder"/>

    <beans:bean class="ru.javawebinar.topjava.util.TokenUtil" id="tokenUtil"/>

    <beans:bean class="ru.javawebinar.topjava.web.EntryPointUnauthorizedHandler" id="entryPointUnauthorizedHandler"/>

    <beans:bean class="ru.javawebinar.topjava.web.filter.AuthenticationTokenFilter" id="authenticationTokenFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
    </beans:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userService">
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>
</beans:beans>